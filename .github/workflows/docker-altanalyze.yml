name: Build and Push altanalyze image

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Resolve Docker Hub creds
        id: creds
        run: |
          # Prefer secrets; fall back to variables if secrets absent
          U="${{ secrets.DOCKERHUB_USERNAME }}"
          T="${{ secrets.DOCKERHUB_TOKEN }}"
          if [ -z "$U" ] || [ -z "$T" ]; then
            U="${{ vars.DOCKERHUB_USERNAME }}"
            T="${{ vars.DOCKERHUB_TOKEN }}"
          fi
          if [ -z "$U" ] || [ -z "$T" ]; then
            echo "have_creds=false" >> "$GITHUB_OUTPUT"
            echo "No Docker Hub creds found; will skip login and push."
          else
            echo "::add-mask::${U}"
            echo "::add-mask::${T}"
            echo "DH_USER=$U" >> $GITHUB_ENV
            echo "DH_TOKEN=$T" >> $GITHUB_ENV
            echo "have_creds=true" >> "$GITHUB_OUTPUT"
            echo "Docker Hub credentials detected (values masked)."
          fi

      - name: Log in to Docker Hub
        if: steps.creds.outputs.have_creds == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DH_USER }}
          password: ${{ env.DH_TOKEN }}

      - name: Determine tag
        id: prep
        run: |
          echo "tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"

      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./containers/altanalyze
          file: ./containers/altanalyze/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ steps.creds.outputs.have_creds == 'true' }}
          tags: |
            ndeeseee/altanalyze:${{ steps.prep.outputs.tag }}
            ndeeseee/altanalyze:latest
